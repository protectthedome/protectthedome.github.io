/***
Meteor_HWInit Function Description
	Arugments: None
	Returns: None
	Call the SR24 init function to intialize hardware to communicate with the 
	cascaded registers
***/
{
	Call SR24_HWInit fucntion
}

/***
Meteor_LightLEDBank Function Description
	Arugments: BankNum, LEDNum
		BankNum: the bank to work with
		LEDNum: LED in the bank wished to light, 0 means all off
	Returns: Status
		If State = false, invalid parameters where given
	Figures out what value to write to SR24 to get the right LED lit. Will use 
	masks to preserve the lighting on any other trace
***/
{
	Set return val to false as defualt
	If LEDNum > 8 or Bank num  > 2
		set returnVal to false
		return
	End if
	Set return val to true
	Get what is currently in the register
	Create basemask variable (uint 32bit)
	Select mask based on bank
	Apply mask to register value to zero out the bank
	if LEDNum > 0
		Create a uint 32bit variable and make it 1
		Shift the 1 left by banknum*8+LEDnum
		OR with masked register value
	end if	
	call SR24_write to write value to shift register
	Return the return val
}

/***
Meteor_ClearAll Function Description
	Arugments: None
	Returns: None
	Calls clear bank for each bank
***/
{
	//Write 0 to SR24
}